name: Frontend-Service CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AZURE_CONTAINER_REGISTRY: ocorneracr3
  APP_NAME: frontend-service
  RESOURCE_GROUP: Online-cornerRG
  IMAGE_TAG: ${{ github.sha }}
  WEB_APP_NAME: online-corner-webapp
  AZURE_APP_SERVICE_PLAN_NAME: online-corner-plan
  AZURE_REGION: eastus
  LINUX_FX_VERSION: ''

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Get ACR credentials dynamically
      run: |
        ACR_USERNAME=$(az acr credential show --name ${{ env.AZURE_CONTAINER_REGISTRY }} --query "username" -o tsv)
        ACR_PASSWORD=$(az acr credential show --name ${{ env.AZURE_CONTAINER_REGISTRY }} --query "passwords[0].value" -o tsv)

        echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
        echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV

    - name: Login to ACR
      uses: docker/login-action@v2
      with:
        registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        username: ${{ env.ACR_USERNAME }}
        password: ${{ env.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .                   # Adjust if frontend-service lives in a subfolder
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}

    - name: Set LINUX_FX_VERSION environment variable
      run: |
        echo "LINUX_FX_VERSION=DOCKER|${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}" >> $GITHUB_ENV

    - name: Get Web App name
      run: |
        WEB_APP=$(az webapp list --resource-group ${{ env.RESOURCE_GROUP }} --query "[?name=='${{ env.WEB_APP_NAME }}'].name" -o tsv)
        if [ -z "$WEB_APP" ]; then
          echo "Web App '$WEB_APP_NAME' not found. Exiting."
          exit 1
        fi
        echo "WEB_APP=$WEB_APP" >> $GITHUB_ENV

    - name: Deploy to Azure App Service
      run: |
        echo "Deploying to Azure App Service..."
        az webapp config container set \
          --name ${{ env.WEB_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --docker-custom-image-name ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} \
          --linux-fx-version ${{ env.LINUX_FX_VERSION }}

    - name: Restart Azure App Service
      run: |
        echo "Restarting Azure Web App..."
        az webapp restart --name ${{ env.WEB_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
